#!/bin/bash


: '
  args: $1 -> text to be splitted
  	$2 -> delimeter char
	$3 -> array or variable to be used (be filled)
'
function SplitLineByDelimeter() {

    local -n text=$1
    local -n delim=$2
    local -n array=$3
    
    IFS="$delim" read -ra array <<< "$text" # var name it's important

}

: '
  expect to be called as:
  GetNumericalValues array_to_be_modified
  The given array will be cleared and will contain only numerical values.
  Given array will be cleared regardless if it has numerical values or not.
'
function GetNumericalValues() {

    local -n array=$1; # get value as reference
    copyarray=( "${array[@]}");
    ITEMS=( "${copyarray[@]}" )
    array=()

    for i in ${ITEMS[@]}; do
    	if [[ $i =~ ^-?[0-9]+$ ]]; then # if it's a numeric value
    	    array=(${array[@]} $i) # save it
    	fi
    done

}


function isValidDirectory() {

   if [[ -d "$1" && -x "$1" ]]; then
       true
   else
       false
   fi

   # usage: if isValidDirectory "newProgram/"; then echo "true"; else echo "false"; fi
}




:'
  $1 -> file to be modified.
  Delete commas at the end of lines and between double quotes. 
'
function DeleteCommas() {
    file=$1
    sed -i -e ':a;s/^\(\([^"]*,\?\|"[^",]*",\?\)*"[^",]*\),/\1 /;ta' -e 's/,[[:blank:]]*$//g' $file
}


:'
  $1 -> content to add
  $2 -> file
  This function add the given line to the given file
  if the conntent of line doesnt exist. If the name of the file does not exists
  the file will be created.
'
function AddLineToFile() {
    content=$1
    file=$2
    
    if [ ! -f $file ]; then
	touch $file  
    fi

    grep -q -F "$content" $file || echo "$content" >> $file
}

:'print an associative array
  $1 -> associative array to print '
function Printaarr() {
    declare -n __p="$1"; for k in "${!__p[@]}"; do printf "%s=%s\n" "$k" "${__p[$k]}" ; done ;
}
